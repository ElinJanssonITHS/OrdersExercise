@page "/"
@using Orders.Common.Records
@using Orders.Common.Classes

<PageTitle>Orders</PageTitle>

<h1>Orders</h1>

<div class="container">
    <div class="input-group mb-4">
        <input type="text" class="form-control" placeholder="Customer Name" @bind="customer" />
        <input type="text" class="form-control" placeholder="Address" @bind="address" />
        <button class="btn btn-primary" type="button" @onclick="AddOrder">Add</button>
    </div>
    <div class="btn-group mb-4">
        @foreach (var order in orders.Get())
        {
            <button class="btn btn-outline-success" @onclick="@(e => CurrentOrder(order))">@order.Id: @order.Customer (@order.Address)</button>
        }
    </div>
    @if (currentOrder != default)
    {
        <h5>Line items for: @currentOrder.Id @currentOrder.Customer (@currentOrder.Address)</h5>
        <div class="input-group mb-4">
            <label class="input-group-text" for="inputProductName">Product</label>
            <input class="form-control" id="inputProductName" @bind="@product"/>
            <label class="input-group-text" for="inputQuantityd">#</label>
            <input class="form-control" id="inputQuantity" @bind="@quantity" />
            <label class="input-group-text" for="inputPrice">$</label>
            <input class="form-control" id="inputPrice" @bind="@price" />
            <label class="input-group-text" for="inputVat">VAT</label>
            <input class="form-control" id="inputVat" @bind="@vat" />
            <button class="btn btn-primary" type="button" @onclick="AddLineItem">Add</button>
        </div>
        if(currentOrder.Items.Count()>0)
        {
            <table class="table table-striped">
                <thead class="table-success">
                    <tr>
                        <th scope="col">ID</th>
                        <th scope="col">Product</th>
                        <th scope="col">Qty</th>
                        <th scope="col">Price</th>
                        <th scope="col">VAT%</th>
                        <th scope="col">VAT$</th>
                        <th scope="col">Total</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in currentOrder.Items)
                    {
                        <tr>
                            <th scope="row">@item.Id</th>
                            <td>@item.Product</td>
                            <td>@item.Quantity</td>
                            <td>@item.Price</td>
                            <td>@(item.Vat*100)</td>
                            <td>@item.VatCost</td>
                            <td>@item.Total</td>
                        </tr>
                    }
                </tbody>
                @* <tfoot>
                    <tr>
                        <th class="d-flex justify-content-end">Order total: @currentOrder.GetOrderTotalAndVat()</th>
                    </tr>
                </tfoot> *@
            </table>
        }
    }
</div>


@code{
    string error = string.Empty;
    string customer = string.Empty;
    string address = string.Empty;
    

    int id = default;
    string product = string.Empty;
    int quantity = default;
    double price = default;
    double vat = default;

    Order? currentOrder = default;
    OrderFactory orders = new();
    LineItem lineItem = new();

    void AddOrder()
    {
        try
        {
            ResetErrorVariable();
            orders.Add(customer, address);
            CurrentOrder(orders.Latest());
            ResetCustumerVariables();
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
    void CurrentOrder(Order? order) => currentOrder = order; 

    void AddLineItem()
    {
        try
        {
            ResetErrorVariable();

            currentOrder?.AddLineItems(product,quantity,price,vat);

            ResetLineItemsVariables();

        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
    void ResetErrorVariable()
    {
        error = string.Empty;
    }
    void ResetCustumerVariables()
    {
        customer = string.Empty;
        address = string.Empty;
    }
    void ResetLineItemsVariables()
    {
        product = string.Empty;
        quantity = default;
        price = default;
        vat = default;
    }


}